name: Create a new release

on:
  push:
    branches:
      - main
      - releases/**

jobs:
  pre-release:
    name: Pre-release
    runs-on: ubuntu-latest

    permissions:
      contents: write

    if: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 📑 Retrieve version information
        id: set_information
        run: |
          version=$(echo '${{ github.ref }}' | egrep -o "v?[0-9]+\.[0-9]+\.[0-9]+(-rc\.[0-9]+|$)")

          if [[ $version =~ -rc ]]; then
            prerelease=true
          else
            exit 1
          fi

          echo "version=${version}" >> $GITHUB_OUTPUT
          echo "prerelease=${prerelease}" >> $GITHUB_OUTPUT

      - name: ⛵️ Create a new pre-release
        if: ${{ steps.set_information.outputs.prerelease == 'true' }}
        uses: ncipollo/release-action@v1
        with:
          name: ${{ steps.set_information.outputs.version }}
          tag: ${{ steps.set_information.outputs.version }}
          prerelease: true
          generateReleaseNotes: true
          token: ${{ secrets.SECRET_GITHUB_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest

    permissions:
      contents: write

    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 📑 Retrieve version information
        id: set_information
        run: |
          version=$(echo '${{ github.event.head_commit.message }}' | egrep -o "v?[0-9]+\.[0-9]+\.[0-9]+(-rc\.[0-9]+|$)")

          if [[ $version =~ -rc ]]; then
            exit 1
          else
            prerelease=false
          fi

          echo "version=${version}" >> $GITHUB_OUTPUT
          echo "prerelease=${prerelease}" >> $GITHUB_OUTPUT

      - name: 🚢 Create a new release
        if: ${{ steps.set_information.outputs.prerelease == 'false' }}
        uses: ncipollo/release-action@v1
        with:
          name: ${{ steps.set_information.outputs.version }}
          tag: ${{ steps.set_information.outputs.version }}
          generateReleaseNotes: true
          token: ${{ secrets.SECRET_GITHUB_TOKEN }}
